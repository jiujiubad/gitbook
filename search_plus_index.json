{"./":{"url":"./","title":"🍺关于本书","keywords":"","body":"chu's ebooks 关于作者 网名：chu微信：jiujiubad邮箱：jiujiubad@gmail.com github：https://github.com/jiujiubad博客：https://xiaochu.cf 加好友或来信时，请简单说明在哪看到我的，谢谢！ 关于本书 把使用过的技术栈，整理成多本 ebooks 电子书，包括： 前后端类 工具类 运维类 团队类 本书开源，转载请注明出处（作者：chu，链接地址：xxx）转发其他作者的文章，会在开头写明转载并附上链接，如有遗漏或侵权请告知 前后端 ebooks 《Ruby On Rails 指南》 《Yaml 指南》 《bootstrap|html|css 指南》 《微信小程序指南》 《Jquery|JavaScript|Ajax 指南》 《TypeScript 指南》 《Vue 指南》 《Flutter 指南》 工具 ebooks 《终端 Shell 指南》：oh-my-zsh，vim 《自搭建指南》：博客，科学上网，私有云盘，下载上传，云播放，ftp服务器 《Markdown 指南》 《Sys-Mac 指南》 《Sys-Windows 指南》 《Sys-Linux 指南》 《虚拟机指南》 《电商 Solidus 指南》 《设计与剪辑指南》 运维 ebooks 《Git 指南》 《环境-Linux|Ansible 指南》 《任务-Sidekiq|Sidetiq|Crontab 指南》 《集群-Docker|Kubernetes|Vagrant 指南》 《代理-Nginx|Apache 指南》 《安全-通讯协议|Oauth 指南》 《数据-Mysql|Postgresql|Redis 指南》 《自动化测试-Selenium|Appium 指南》 团队 ebooks 《初的文档》 《PJ 项目》 《项目方法论》敏捷过程、Growth Hack、User Story、项目管理 "},"前后端/Ruby On Rails 指南/Ruby On Rails 指南.html":{"url":"前后端/Ruby On Rails 指南/Ruby On Rails 指南.html","title":"《Ruby On Rails 指南》","keywords":"","body":"《Ruby On Rails 指南》 本书记录工作中常用的 ruby on rails，包括七个部分： 项目及需求 功能-rails 功能-gem 方法-api 项目规范 测试 元编程 "},"前后端/Ruby On Rails 指南/1/1项目及需求.html":{"url":"前后端/Ruby On Rails 指南/1/1项目及需求.html","title":"1项目及需求","keywords":"","body":"第 1 章 项目及需求 1.3 ror 需求 1.3.1 博客 1.3.2 购物网 􏰄􏰅􏰆􏰇 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/1/Erp.html":{"url":"前后端/Ruby On Rails 指南/1/Erp.html","title":"Erp","keywords":"","body":"2.6 Erp "},"前后端/Ruby On Rails 指南/1/停车计费程序（Rspec 测试）.html":{"url":"前后端/Ruby On Rails 指南/1/停车计费程序（Rspec 测试）.html","title":"停车计费程序（Rspec 测试）","keywords":"","body":"2.10 停车计费程序（Rspec 测试） @data7 Rails 自动化测试 2-1 to 4-8: https://xiaochu.ga/Content/syllabus_wzHTVX.html 2.10.1 需求 未注册登入用户，可以点选开始计费和结束，并使用「一般费率」： 第一个小时 ¥2，之后每半小时 ¥1 有注册的登入用户，可以选择「短期费率」 或「长期费率」 有注册的登入用户，短期费率：第一个小时 ¥2，之后每半小时 ¥0.5 有注册的登入用户，长期费率：一天 ¥16，若停六小时以内 ¥12 用户验收测试: 测试「一般费率」缴费流程 测试注册流程 测试登入登出流程 测试「短期费率」流程 故意修改 Model API "},"前后端/Ruby On Rails 指南/1/分享贴文和点赞网（Ajax）.html":{"url":"前后端/Ruby On Rails 指南/1/分享贴文和点赞网（Ajax）.html","title":"分享贴文和点赞网（Ajax）","keywords":"","body":"2.8 分享贴文和点赞网（Ajax） @data7 Ajax 交互式网页应用: https://xiaochu.ga/Content/syllabus_Kjk6xh.html 2.8.1 需求 用户可以贴文 用户可以浏览所有贴文 用户可以删除自己的贴文 用户可以针对贴文按讚，每篇贴文只能按讚一次 将删除改成自行绑事件 贴文无限捲轴 使用核选方块(checkbox)做开关 使用下拉选单(select)分类贴文 "},"前后端/Ruby On Rails 指南/1/列车订票系统（Api）.html":{"url":"前后端/Ruby On Rails 指南/1/列车订票系统（Api）.html","title":"列车订票系统（Api）","keywords":"","body":"2.7 列车订票系统（Api） @data7 Web API 实作 3-1 to 7-7: https://xiaochu.ga/Content/syllabus_dsrUtj.html @data7 Rails 自动化测试 5-1 to 5-9: https://xiaochu.ga/Content/syllabus_wzHTVX.html 2.7.1 需求 可以查询有哪些列车 可以查询特定列车有哪些空位 可以订票，并得到一组订票号码(乱数产生) 根据订票号码，可以查询订票资料 根据订票号码，可以修改订票资料 根据订票号码，可以取消订票 使用者可以在网页上注册、登入，拿到 API Key 如果在有登入的情况下进行订票的话，则可以查询该用户下的所有订票 注册、登入和登出的 API，好让用户输入帐号密码登入，拿到 API Key 更新自己的资料，包括修改 E-mail、密码和上传照片 查询自己的资料 GET 拿资料可能会很复杂，因为资料字段很多，使用 JBuilder 来定义 JSON 测试注册 API: 测试登入登出 API 测试查询列车 API 测试查询订票、修改定票、取消订票 API 测试订票 API 测试查询我全部的订单 API 测试查询和更新我的资料 API "},"前后端/Ruby On Rails 指南/1/天气预报（Api）.html":{"url":"前后端/Ruby On Rails 指南/1/天气预报（Api）.html","title":"天气预报（Api）","keywords":"","body":"2.6 天气预报（Api） @data7 Web API 实作 1-1 to 2-6：https://xiaochu.ga/Content/syllabus_dsrUtj.html 2.6.1 需求 串接 聚合数据 全国天气预报 的 API，存下所有城市资料，并更新指定城市的天气信息。 建立一个 City model，然后把 API 抓取回来的城市资料存进数据库 新增 cities controller 和页面，让用户可以浏览城市资料 用户可以更新指定城市的气温资讯 "},"前后端/Ruby On Rails 指南/1/微博（一个模型内两者多对多）.html":{"url":"前后端/Ruby On Rails 指南/1/微博（一个模型内两者多对多）.html","title":"微博（一个模型内两者多对多）","keywords":"","body":"2.1 微博（一个模型内两者多对多） "},"前后端/Ruby On Rails 指南/1/投票系统.html":{"url":"前后端/Ruby On Rails 指南/1/投票系统.html","title":"投票系统","keywords":"","body":"2.1 投票系统 @data7 初级练习: https://xiaochu.ga/Content/syllabus_f11jH0.html 一对多：3-8 2.1.1 需求 检视主题，用投票数来排序 对主题投票 开新主题、编辑主题、删除主题 加一个“扣分”按钮，做的事跟加分按钮相反 根据投票分数排序 topics 新增一个 'about' 页面，并将连结放在 topics 列表的最下方 "},"前后端/Ruby On Rails 指南/1/招聘网.html":{"url":"前后端/Ruby On Rails 指南/1/招聘网.html","title":"招聘网","keywords":"","body":"2.4 招聘网 @data7 招聘网: https://xiaochu.ga/Content/syllabus_0SvP9N.html 2.4.1 需求 身为管理者，我可以新增职缺需求：包括「标题」「内容」「薪资上限」「薪资下限」「联系方式」 身为管理者，我可以编辑、删除、隐藏职缺需求 （在后台）； 身为使用者，我必须「登入」才能申请职缺； 身为使用者，我必须要有「admin 身份标识」才能进入后台。 加上 sidebar 设计：区分 admin#job 与 job 页面 admin 后台的职缺状态，改成 Font Awesome 图标显示 把 is_hidden 的操作改成按钮 jobs#show 在隐藏状态不可以用 管理员在后台可以看到每个职缺有多少使用者投递简历； 管理员在后台可以看到每个职缺里面的投递简历内容，并且可以下载附件。 "},"前后端/Ruby On Rails 指南/1/有学.html":{"url":"前后端/Ruby On Rails 指南/1/有学.html","title":"有学","keywords":"","body":"2.12 有学 参考 《天马》、《rails 实战圣经》搭建公司、部门、个人框架 参考《云豹》字段，以及 Redis + Selenium 参考《rails5 敏捷开发》《rails tutorial》添加测试 参考《rails guides》和《天马》数据库查询 表单让用户提交数据，sidekiq 异步执行，actioncable 2.12.1 项目模块 1）基础页面 首页 home 课程介绍，/pages/course_intro 常见问题，/pages/faq 教学团队，/pages/teachers 学员心得，/pages/students 联系方式，/pages/contact 聊天插件 帮助文档，https://readme.io 2）注册登录 devise 手机登录 微信登录 3）dashboard 学习中心 聚会，/meetup_groups，增删改 直播，home/live，有很多个往期视频，有预告信息或直播，管理员可以增删改 通知，home/notice 网站公告 比赛，/competitions，index 显示举办的比赛 比赛 competitions#show 作品缩略图打开是弹窗的作品详情，对应内容来源于 /works/id 比赛获奖，/competitions/4/awards，index 显示所有获奖作品 比赛作品详情，/works/id，在比赛获奖页面链接过来（其余页面用弹窗的方式显示详情） 比赛作品详情，图片、评论、浏览恢复点赞数，倒计时 4）courses 课程 all, basic, major, optional 标签 教学大纲，/courses/36/syllabus 正文，/posts/id，显示为 markdown 格式 正文，收藏，感受，分页 某课程的作业，/tasks/id 某课程的作业-别人的，/tasks/id/other_answers?order=recent，点赞 搜索教材 课程感受三个选择（站内信） 5）user 个人主页 我的作业（图片或文字），图片来于 /api/file 作业进度 比赛作品 会员有很多的课程 课程按会员等级不同显示不同 会员升级后，原来的作业、作品等还保持原来的进度 "},"前后端/Ruby On Rails 指南/1/活动报名系统（百宝箱）.html":{"url":"前后端/Ruby On Rails 指南/1/活动报名系统（百宝箱）.html","title":"活动报名系统（百宝箱）","keywords":"","body":"2.11 活动报名系统（百宝箱） 2.11.1 需求 用户可以在前台看到活动信息 管理员可以在后台管理活动资料 管理员可以在后台管理用户资料 用户可以在前台进行报名 管理员可以在后台管理报名资料 "},"前后端/Ruby On Rails 指南/1/电影影评网.html":{"url":"前后端/Ruby On Rails 指南/1/电影影评网.html","title":"电影影评网","keywords":"","body":"2.3 电影影评网 @data7 Rails101 加分作业: https://xiaochu.ga/Content/syllabus_TCv0K3.html 2.3.1 需求 使用者可以建立电影 Movie 使用者可以针对电影的评论 Review 使用者必须收藏（ Favorite） 该电影，才可以留下 Review "},"前后端/Ruby On Rails 指南/1/码云机考题.html":{"url":"前后端/Ruby On Rails 指南/1/码云机考题.html","title":"码云机考题","keywords":"","body":"2.7 码云机考题 "},"前后端/Ruby On Rails 指南/1/讨论区.html":{"url":"前后端/Ruby On Rails 指南/1/讨论区.html","title":"讨论区","keywords":"","body":"2.2 讨论区 @data7 Rails101: https://xiaochu.ga/Content/syllabus_TCv0K3.html 一对多：6-2 多对多：7-2 2.2.1 需求 使用者注册以及登录功能 开新讨论区、留言功能 加入讨论区、退出讨论区功能 权限管理功能 热门文章排序功能 了解什么是 RESTful "},"前后端/Ruby On Rails 指南/1/购物网.html":{"url":"前后端/Ruby On Rails 指南/1/购物网.html","title":"购物网","keywords":"","body":"2.5 购物网 @data7 购物网: https://xiaochu.ga/Content/syllabus_3yMKyR.html 一对多：5-3、8-1、8-2 2.5.1 需求 1、身为商家，我要能够登入后台 整个商店网站分为两种权限：admin (商家=管理者) / user （消费者） 商家可以登入 /admin 后台 2、身为商家，我要能够登入后台上架商品 后台上架网址必须要是 /admin/products 商品的内容分为商品名称、描述、价格、库存 商品要能够设定是否能上架贩卖 商品必须要有商品图片 3、身为消费者，我要在前台找到商品并付款 商品展示 加入购物车 生成订单，填写地址并付款 付款后发送确认信 商家也收到付款的订单 库存商品数量随之减少 3.1）购物车 加入购物车 一键清空购物车内所有的物品 某样东西突然不想买了，我可以在购物车内删除它 已经加入购物车的物品，不能重复被加入 可以更改购物车内购买的数量( 原本预设数量都是1） 库存为 0 的货品不能购买 在购物车新增数量时，不能更新超过原有库存的数量 3.2）订单 按下「确认结帐」按钮后，可以显示结帐明细，并且可以让消费者输入寄送地址 有时候商品会下架，或者价格会改变，新建立一个 model 去储存当时购买的信息 把网址订单号码改成乱序编码 使用者可以在 /account/orders/ 看到过去所有订单 使用者在下拉式选单可以看到过去所有的订单 3.3）支付订单与寄信 使用 is_paid（boolean 属性）判断是否已付费 使用 payment_method 判断，实际付款渠道为：微信、支付宝 已付款过的订单不可以再付 使用者在下单后会收到一封订单确认信 3.4）订单状态切换 建立 admin/orders 可以看到系统内所有订单 admin 的 order 列表应要能显示订单状态 使用者可以“申请取消订单” 使用者“申请取消订单”后，管理员应该要收到“申请通知信” 后台管理员可以“取消订单”、“出货” 后台管理“出货”后，系统应该寄出通知信 后台管理员“取消订单”后，系统应该寄出通知信 "},"前后端/Ruby On Rails 指南/2/2功能-rails.html":{"url":"前后端/Ruby On Rails 指南/2/2功能-rails.html","title":"2功能-rails","keywords":"","body":"第 2 章 功能-rails 1.1 ror 资料 1.1.1 精品书 1.1.2 培训班 1.1.3 精品链接 1.2 ror 功能 1.2.1 登录模块 1.2.2 bootstrap 模板套用 1.2.3 表单模块 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/2/ror 资料.html":{"url":"前后端/Ruby On Rails 指南/2/ror 资料.html","title":"ror 资料","keywords":"","body":"ror 资料 @data1 = rails guides @data2 = 《rails5 敏捷开发》第五版 @data3 = 《rails tutorial》第五版 @data4 = 《ruby 基础教程》 @data5 = 《ruby 元编程》 @data6 = ruby on rails 实战圣经 @data7 = 全栈营 @data8 = 论坛 "},"前后端/Ruby On Rails 指南/2/0未整理.html":{"url":"前后端/Ruby On Rails 指南/2/0未整理.html","title":"0未整理","keywords":"","body":"百宝箱： 自定义Model网址 多语言设置 时区设置 格式化日期时间 表单单选 UI (固定选项无 Model) 表单单选 UI 和 Select2 Plugin 表单多选 UI 和 Select2 Plugin 嵌套表单(1-to-1) 嵌套表单(1-to-many) 选日期时间的 UI 拆开前后台的 CSS 和 JS Rich Editor 编辑器 批次编辑 (Bulk Editing) 自订列表顺序 多步骤表单 显示资料验证错误讯息 资料筛选和搜寻 多档案上传 图表资料分析 软删除和版本控制 数据汇出 用户权限管理 HTML E-mail 寄送 数据汇入 异步处理任务 "},"前后端/Ruby On Rails 指南/2/bootstrap 模板使用.html":{"url":"前后端/Ruby On Rails 指南/2/bootstrap 模板使用.html","title":"bootstrap 模板使用","keywords":"","body":"1.5 bootstrap 模板使用 @data1: http://xxxx "},"前后端/Ruby On Rails 指南/2/heroku常用命令.html":{"url":"前后端/Ruby On Rails 指南/2/heroku常用命令.html","title":"heroku常用命令","keywords":"","body":"1.8 heroku常用命令 @data3: Pxx-Pyy "},"前后端/Ruby On Rails 指南/2/scaffold 脚手架.html":{"url":"前后端/Ruby On Rails 指南/2/scaffold 脚手架.html","title":"scaffold 脚手架","keywords":"","body":"1.2 scaffold 脚手架 @data2: Pxx-Pyy "},"前后端/Ruby On Rails 指南/2/数据库查询.html":{"url":"前后端/Ruby On Rails 指南/2/数据库查询.html","title":"数据库查询","keywords":"","body":"1.7 数据库查询 @data1: https://ruby-china.github.io/rails-guides/active_record_querying.html 天马 erp：https://github.com/jiujiubad/xc-amz-erp "},"前后端/Ruby On Rails 指南/2/方法-current_user|current_cart.html":{"url":"前后端/Ruby On Rails 指南/2/方法-current_user|current_cart.html","title":"方法-current_user|current_cart","keywords":"","body":"1.10 定义 current_user、current_cart、current_xxx 修改 xxx_helper.rb def current_camp @current_camp ||= find_camp end def find_camp if (camp_id = params[:camp_id]) session[:camp_id] = camp_id Camp.find_by(id: camp_id) elsif camp_id.blank? && session[:camp_id] Camp.find_by(id: session[:camp_id]) else Camp.first end end 修改 app/controllers/application_controller.rb include XxxHelper "},"前后端/Ruby On Rails 指南/2/方法-title.html":{"url":"前后端/Ruby On Rails 指南/2/方法-title.html","title":"方法-title","keywords":"","body":"1.3 title @data3：P104-105 # 根据所在的页面返回完整的标题 def full_title(page_title = '') base_title = \"Ruby on Rails Tutorial Sample App\" if page_title.empty? base_title else page_title + \" | \" + base_title end end "},"前后端/Ruby On Rails 指南/2/注册登录模块-devise.html":{"url":"前后端/Ruby On Rails 指南/2/注册登录模块-devise.html","title":"注册登录模块-devise","keywords":"","body":"1.4 注册登录（用户权限管理） 1.4.1 gem devise: https://github.com/plataformatec/devise "},"前后端/Ruby On Rails 指南/2/注册登录模块-自定制.html":{"url":"前后端/Ruby On Rails 指南/2/注册登录模块-自定制.html","title":"注册登录模块-自定制","keywords":"","body":"1.4 注册登录（用户权限管理） 1.4.2 @data3: P283 P293不完善 P295两个问题token：记忆令牌 即 密码 digest：密码摘要/哈希 即 hash 登录时： 记忆令牌 即 密码、加密的用户id，保存在浏览器 密码摘要/哈希 即 hash，保存到数据库 退出时修改： 记忆令牌即密码，保存在浏览器 "},"前后端/Ruby On Rails 指南/2/用户故事.html":{"url":"前后端/Ruby On Rails 指南/2/用户故事.html","title":"用户故事","keywords":"","body":"1.1 用户故事 @data7 拆解任务 3.1-3.7: https://xiaochu.ga/Content/519.html @data7 用户故事 4.1.4.7: https://xiaochu.ga/Content/526.html 用户故事：谁-在什么模块-做什么-重要程度 1）画出建表脑图，就能知道项目模块（表名也搞定）2）分别写出模块下的页面路径和功能，就能知道要创建哪些控制器和视图3）在 Teambeation 中创建第一步的项目模块，添加第二步的子任务，重要程度为 Must 的任务设置时间4）如果扩展模块，要提前做什么？扩展国家（地区和语言），扩展项目模块 "},"前后端/Ruby On Rails 指南/2/表单.html":{"url":"前后端/Ruby On Rails 指南/2/表单.html","title":"表单","keywords":"","body":"1.6 表单 1.6.1 @data6: http://xxxx 1.6.2 @data7 百宝箱: https://xxxx "},"前后端/Ruby On Rails 指南/3/3功能-gem.html":{"url":"前后端/Ruby On Rails 指南/3/3功能-gem.html","title":"3功能-gem","keywords":"","body":"第 3 章 功能-gem 3.1 调试 3.1.1 byebug 3.1.2 pry 3.2 权限管理 3.2.1 devise 3.2.2 cancancan 3.3 美观 3.3.1 bootstrap 3.3.2 jquery 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/3/前端样式.html":{"url":"前后端/Ruby On Rails 指南/3/前端样式.html","title":"前端样式","keywords":"","body":"3.3 前端样式 3.3.1 bootstrap 3.3.2 jquery "},"前后端/Ruby On Rails 指南/3/功能-Excel.html":{"url":"前后端/Ruby On Rails 指南/3/功能-Excel.html","title":"功能-Excel","keywords":"","body":""},"前后端/Ruby On Rails 指南/3/功能-Markdown.html":{"url":"前后端/Ruby On Rails 指南/3/功能-Markdown.html","title":"功能-Markdown","keywords":"","body":"3.4 功能-Markdown 【精】Markdown功能+Pygments-高亮：http://railscasts.com/episodes/207-syntax-highlighting-revised?view=asciicastMarkdown-Pygments-Css样式：https://github.com/richleland/pygments-css【精】Markdown-Coderay-高亮：https://ruby-china.org/topics/474Markdown-Coderay-代码块标题code_header：https://github.com/ryanb/railscasts/blob/master/lib/code_formatter.rbMarkdown-coderay-css样式1：http://railscasts.com/episodes/207-syntax-highlighting?view=asciicastMarkdown-Coderay-Css样式2：http://www.crashingchandelier.com/articles/6-rails-5-blog-with-coderay-syntax-highlighter 3.4.1 工具对比 0）redcarpet 必备的 Markdown to html 解析器：下载 27150000，最后更新 2016 1）Coderay 推荐第一选择（速度最快，RailsCast 网站使用有 css，但支持语言少）：下载 104,000,000，最后更新 2017 2）pygments.rb 推荐第二选择（支持语言多，Github 网站使用，css 下载 https://github.com/richleland/pygments-css/blob/master/default.css）：下载 3,700,000，最后更新 2017 3）rouge 可用： 是简化的 pygments，下载 19,890,000，最后更新 2018 4）uv 弃用（使用人数太少）：下载 14,000，最后更新 2011 5）kramdown 弃用（适用于 ruby，不适合 rails）：下载 22,420,000，最后更新 2019 6）kramdown-rails 弃用（使用人数太少）：下载 14,000，最后更新 2014 3.4.2 推荐1 Coderay app/helper/application_helper.rb # Markdown 语法高亮：Coderay class HTMLwithCodeRay #{CGI.escapeHTML(language.to_s)} #{CodeRay.scan(code, language ||= :text).div(tab_width: 2, line_numbers: :inline)} EOS else CodeRay.scan(code, language ||= :text).div(tab_width: 2, line_numbers: :inline) end end end # Markdown to Html 解析：Coderay def markdown(text) renderer = HTMLwithCodeRay.new(hard_wrap: true, filter_html: true) options = { autolink: true, no_intra_emphasis: true, fenced_code_blocks: true, lax_html_blocks: true, strikethrough: true, superscript: true } Redcarpet::Markdown.new(renderer, options).render(text).html_safe end app/assets/stylesheets/coderay.css.scss .CodeRay, .CodeRay pre { font-family: 'Menlo', 'Courier New', 'Terminal', monospace; background-color: #232323; color: #E6E0DB; } .CodeRay pre { margin: 0px; padding: 0px; } /*** CODE BLOCKS ***/ .code_block { margin: 12px 0; } .code_header { position: relative; background-color: #E0E0E0; font-size: 12px; padding: 4px 7px; border: solid 1px #B6B6B6; border-bottom: none; } .code_header .clippy { position: absolute; top: 4px; right: 7px; } .clippy_label { position: absolute; right: 20px; top: 1px; text-align: right; width: 200px; font-size: 10px; color: #555; } .CodeRay { overflow: auto; border: 1px solid #777; border-top: none; padding: 5px 7px; font-size: 13px; margin: 0; line-height: 17px; } code { border: solid 1px #CCC; background-color: #EEE; font-family: 'Menlo', 'Courier New', 'Terminal', monospace; padding: 0 3px; } pre code { display: block; background-color: #EEE; padding: 5px 7px; } .CodeRay .an { color:#E7BE69 } /* html attribute */ .CodeRay .c { color:#BC9358; font-style: italic; } /* comment */ .CodeRay .ch { color:#509E4F } /* escaped character */ .CodeRay .cl { color:#FFF } /* class */ .CodeRay .co { color:#FFF } /* constant */ .CodeRay .fl { color:#A4C260 } /* float */ .CodeRay .fu { color:#FFC56D } /* function */ .CodeRay .gv { color:#D0CFFE } /* global variable */ .CodeRay .i { color:#A4C260 } /* integer */ .CodeRay .il { background:#151515 } /* inline code */ .CodeRay .iv { color:#D0CFFE } /* instance variable */ .CodeRay .pp { color:#E7BE69 } /* doctype */ .CodeRay .r { color:#CB7832 } /* keyword */ .CodeRay .kw { color:#CB7832 } /* keyword */ .CodeRay .rx { color:#A4C260 } /* regex */ .CodeRay .s { color:#A4C260 } /* string */ .CodeRay .sy { color:#6C9CBD } /* symbol */ .CodeRay .ta { color:#E7BE69 } /* html tag */ .CodeRay .pc { color:#6C9CBD } /* boolean */ html 3.4.2 推荐2 Pygments.rb app/helper/application_helper.rb # Markdown 语法高亮：Pygment class HTMLwithPygments true}) end end # Markdown to Html 解析：Pygment def markdown(text) renderer = HTMLwithPygments.new(hard_wrap: true, filter_html: true) options = { autolink: true, no_intra_emphasis: true, fenced_code_blocks: true, lax_html_blocks: true, strikethrough: true, superscript: true } Redcarpet::Markdown.new(renderer, options).render(text).html_safe end app/assets/stylesheets/pygments.css.erb /*控制台输入 Pygments.styles 可以查看所有代码块高亮样式： [\"manni\", \"igor\", \"lovelace\", \"xcode\", \"vim\", \"autumn\", \"abap\", \"vs\", \"rrt\", \"native\", \"perldoc\", \"borland\", \"arduino\", \"tango\", \"emacs\", \"friendly\", \"monokai\", \"paraiso-dark\", \"colorful\", \"murphy\", \"bw\", \"pastie\", \"rainbow_dash\", \"algol_nu\", \"paraiso-light\", \"trac\", \"default\", \"algol\", \"fruity\"] */ html "},"前后端/Ruby On Rails 指南/3/开发必备.html":{"url":"前后端/Ruby On Rails 指南/3/开发必备.html","title":"开发必备","keywords":"","body":"开发必备的 gem 《算法》《设计模式》《重构改善既有代码的设计》 安装 figaro gem 'pry-rails', '~> 0.3.9', group: :development gem 'figaro', '~> 1.1', '>= 1.1.1', group: :development pry-rails pry pry-byebug + awesome_rails_console 高亮样式 rubocop overcommit "},"前后端/Ruby On Rails 指南/3/权限管理.html":{"url":"前后端/Ruby On Rails 指南/3/权限管理.html","title":"权限管理","keywords":"","body":"3.2 权限管理 3.2.1 devise 3.2.2 cancancan "},"前后端/Ruby On Rails 指南/3/调试.html":{"url":"前后端/Ruby On Rails 指南/3/调试.html","title":"调试","keywords":"","body":"3.1 调试 3.1.1 byebug 1）打开 /config/puma.rb # 设置 puma 超时时间（过多少时间推出 byebug） worker_timeout 5000 2）常用 3.1.2 pry "},"前后端/Ruby On Rails 指南/4/4方法-api.html":{"url":"前后端/Ruby On Rails 指南/4/4方法-api.html","title":"4方法-api","keywords":"","body":"第 4 章 方法-api 4.1 RailsApi Routes 4.2 RailsApi Model 4.2.1 destroy 和 delete_all 的区别 4.3 RailsApi Controller 4.3.1 build 和 new 的区别 4.4 RailsApi View 4.5 RubyApi 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/4/rails-c-build 和 new 的区别.html":{"url":"前后端/Ruby On Rails 指南/4/rails-c-build 和 new 的区别.html","title":"rails-c-build 和 new 的区别","keywords":"","body":"4.3.1 build 和 new 的区别 ？new 用于新建表单，build 用于新建对象？ "},"前后端/Ruby On Rails 指南/4/rails-m-destroy 和 delete_all 的区别.html":{"url":"前后端/Ruby On Rails 指南/4/rails-m-destroy 和 delete_all 的区别.html","title":"rails-m-destroy 和 delete_all 的区别","keywords":"","body":"4.2.1 destroy 和 delete_all 的区别 ？delete 是数据库级别的？ "},"前后端/Ruby On Rails 指南/4/rails-m-empty?、blank?、any?、exist? 的区别.html":{"url":"前后端/Ruby On Rails 指南/4/rails-m-empty?、blank?、any?、exist? 的区别.html","title":"rails-m-empty?、blank?、any?、exist? 的区别","keywords":"","body":"4.2.2 empty?、blank?、any?、exist? 的区别 《ruby on rails理解.md》，初探present?和exists?：https://ithelp.ithome.com.tw/articles/10205968 present? 方法等价于 !blank?。利用ActiveRecord初始化物件，效能差。 presence 方法的返回值为调用对象，否则返回 nil。 exist? 效能好，ActiveResource下的方法 "},"前后端/Ruby On Rails 指南/4/rails-v-form_with、form_for、form_tag 的区别.html":{"url":"前后端/Ruby On Rails 指南/4/rails-v-form_with、form_for、form_tag 的区别.html","title":"rails-v-form_with、form_for、form_tag 的区别","keywords":"","body":"1.4.1 form_with、form_for、form_tag 的区别 官网：https://ruby-china.github.io/rails-guides/5_1_release_notes.html Rails 5.1 之后，把后两个统一为 form_with # 只使用 URL # 指定作用域，添加到输入字段的名称前 # 使用模型，从中推知 URL 和作用域 # 现有模型的更新表单填有字段的值： form_with 的设置默认 remote:true，不想用 remote 就需要手动设置 local: true Ruby-China-Jasl：「Rails5 推荐 form_with 然后不提供 local:true 来实现『Ajax 模式』提交」 "},"前后端/Ruby On Rails 指南/4/ruby-string.html":{"url":"前后端/Ruby On Rails 指南/4/ruby-string.html","title":"ruby-string","keywords":"","body":"4.5.2 字符串 chomp 去最后一个换行符 strip 去开头结尾的空格 "},"前后端/Ruby On Rails 指南/5/5项目规范.html":{"url":"前后端/Ruby On Rails 指南/5/5项目规范.html","title":"5项目规范","keywords":"","body":"第 5 章 项目规范 2.1 项目初始化 2.2 项目步骤 2.2.1 建表思维导图 2.2.2 展示的页面和字段 2.2.3 建表并关联 2.2.4 编写假数据Seed 2.2.5 用假数据展示页面 2.2.6 改用真数据：数据查询与逻辑 2.2.7 按需扩展字段 2.3 命名与描述 2.3.1 README模板 2.3.2 表命名 2.3.3 字段命名 2.3.4 Commit与tag命名 2.3.5 Changelog命名 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/5/命名与描述.html":{"url":"前后端/Ruby On Rails 指南/5/命名与描述.html","title":"命名与描述","keywords":"","body":"2.3 命名与描述 2.3.1 README模板 Ruby README：https://github.com/ruby/ruby/blob/trunk/README.md Rails README：https://github.com/rails/rails/blob/master/README.md # What's《ROR 指南》? Ruby 是一门 xxx 的语言，Rails 是 Ruby 的框架，用于快速开发 Web 项目。 ## Ruby 的特点 * 动态语言 * 脚本语言 ## Getting Started gem install rails rails new myapp ## License Copyright (c) 2011-2017 Ruby China Ruby on Rails is released under the [MIT License](). 2.3.2 表命名 2.3.3 字段命名 2.3.4 Commit与tag命名 阮一峰-Commit和Changelog编写指南：http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html Git Commit 怎么写：https://www.jianshu.com/p/0117334c75fc Finish | Update | Add | Fix | Merge | Import | FixError https://github.com/rubocop-hq/rubocop/blob/master/CHANGELOG.md 2.3.5 Changelog命名 阮一峰-Commit和Changelog编写指南：http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html rails/activerecord/CHANGELOG.md：https://github.com/rails/rails/blob/master/activerecord/CHANGELOG.md So-simple-theme changelog：https://github.com/mmistakes/so-simple-theme/blob/master/CHANGELOG.md The format is based on Keep a Changelog：http://keepachangelog.com/en/1.0.0/ Semantic Versioning：http://semver.org/spec/v2.0.0.html ## [Released] 此项目的所有值得注意的更改都将记录在此文件中 ## [0.0.1] - 2018-09-01 ### Added/新添加的功能 - New visual identity by @tylerfortune8. - Version navigation. ### Changed/对现有功能的变更 - Start using \"changelog\" over \"change log\" since it's the common usage. - Start versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date. ### Deprecated/很快移除的功能 - Remove empty sections from CHANGELOG ### Removed/已经移除的功能 - Section about \"changelog\" vs \"CHANGELOG\". ### Fixed/对bug的修复 - Fix Markdown links to tag comparison URL with footnote-style links. ### Security/对安全的改进 - Refer to a \"change log\" instead of a \"CHANGELOG\" "},"前后端/Ruby On Rails 指南/5/重构.html":{"url":"前后端/Ruby On Rails 指南/5/重构.html","title":"重构","keywords":"","body":"RMCV 步骤 关系、验证、回调、事务、异常 （关系）has_many :products （回调）before_destroy :xxx （验证）validates :title, presence: true "},"前后端/Ruby On Rails 指南/5/项目初始化.html":{"url":"前后端/Ruby On Rails 指南/5/项目初始化.html","title":"项目初始化","keywords":"","body":"2.1 项目初始化 2.1.1 新建项目（不安装依赖） rails new xxx --skip-bundle 2.1.2 修改 RubyGems 源 【精】RubyGems镜像源-Ruby China：https://gems.ruby-china.com/ bundle config mirror.https://rubygems.org https://gems.ruby-china.com bundle 2.1.3 Git 忽略 Mac 和 IDE 配置文件 Github官方-全局.gitignore：https://gist.github.com/octocat/9257657 1）新增 Mac 全局配置文件 vi ~/.gitignore_global 2）填写 ## IDE、文本编辑器 配置文件 ## .vscode .idea ## 编译来源 ## *.com *.class *.dll *.exe *.o *.so ### 压缩文件 ## # *.7z # *.dmg # *.gz # *.iso # *.jar # *.rar # *.tar # *.zip ## 日志 | 数据库 ## *.log *.sql *.sqlite ## Mac 配置文件 ## .DS_Store .DS_Store? ._* .Spotlight-V100 .Trashes ehthumbs.db Thumbs.db 3）让配置生效 git config --global core.excludesfile '~/.gitignore_global' 2.1.4 提交代码（比如 Github） git add -A git commit -am \"Initial commit\" git remote add origin git@github.com:your_project git push -u origin master "},"前后端/Ruby On Rails 指南/5/项目步骤.html":{"url":"前后端/Ruby On Rails 指南/5/项目步骤.html","title":"项目步骤","keywords":"","body":"2.2 项目步骤 入门项目需掌握：调试工具，大框架（Module 和 Class）与小框架（元编程），数据查询语句 怎样让问题在一开始就暴露出来： 第一步，建表包含主要字段，读 Api 存储主要数据 第二步，针对主要字段，做 Seed 假数据，查询算法难写的直接给个值就好（只要能展示就行） 第三步，用假数据展示 最耗时的事： seed 假资料（参考天马项目总结） 数据表命名、字段命名、添加标记类字段（参考云豹项目） 数据库查询展示（参考天马项目） 2.2.1 画出：建表思维导图 2.2.2 写出：展示的页面和字段 1）del/remark/role, start_at/expired_at 2）boolean is_locked 锁的（用于事务） is_valid 有效的（用于有效期） is_active 激活的（用于邮件激活账户） is_able 能用的（用于尝试） is_public, is_hidden, is_private 是否显示 2.2.3 建表并关联 1）rails new 2）def full_title 3）rails g model xx 4）rails g controller admin::xx 5) admin::view 6) rails g controller xx 7) view 2.2.4 编写假数据seed、tasks [1,2,3]shuffle[0..1] 随机选两个, rand(), [1,2,3].sample(2) 随机选两个 存储多字段两种方法： 方法一：{\"a\":[\"b\",\"c\",\"d\"]}.each{|key, value| Demo.find_or_create_by(a:key, b:value[0], c:value[1], d:value[2])} 方法二：[\"a\",\"b\",\"c\"].product([1,2,3]){|ary| Demo.find_or_create_by(a:ary[0], b:ary[1])} 常用 faker Faker::NameFaker::Markdown Faker::Lorem 段落 Faker::Avatar 头像 Faker::Internet 邮件密码ip Faker::Commerce 产品明细 task 模板：lib/tasks/faker.rake，通过执行 rails dev:all namespace :dev do # 跳过回调： task all: [ :create_cust_accounts, :create_shops ] task create_cust_accounts: :environment do puts \"Generate faker users.\" 10.times do @batch = CustAccountBatch.create!(..) 50.times do if @batch.valid? @batch.cust_accounts.create!( email: \"#{Faker::Name.last_name.capitalize}_#{Faker::Name.first_name.capitalize}_#{rand(10000..99999)}#{[\"@aol.com\", \"@gmail.com\", \"@yahoo.com\", \"@outlook.com\"].shuffle[0]}\", passwd: \"#{Faker::Name.last_name.capitalize}_#{Faker::Name.first_name.capitalize}_#{rand(10000..99999)}@#\") end end end end task create_courses: :environment do puts \"Generate faker courses.\" Camp.all.each do |camp| rand(30..40).times do camp.courses.create!(name: Faker::Movie.quote, description: Faker::Lorem.paragraph, image: \"center#{rand(1..24)}.jpg\", is_locked: false) end end end end 2.2.5 用假数据展示页面 2.2.6 改用真数据：数据库查询 1）常用语法 2.2.7 扩展数据库字段 2.2.8 测试与重构 demo：天马项目流程 1）rails new2）gem redis，bcrypt，kaminari，jwt，sidekiq，sidetiq，sinatra，faker，pry-railsbootstrap 模板titlecontroller：admin/account_activations，password_resets，sessions，static_pages，usersmailers：user_mailermodel：company，department，region，signin_log，userseed3）gem figaro，letter_avatarcontroller：admin/account_activations，password_resets，sessions，static_pages，usersmailerslayout：sidebar "},"前后端/Ruby On Rails 指南/6/6测试.html":{"url":"前后端/Ruby On Rails 指南/6/6测试.html","title":"6测试","keywords":"","body":"第 6 章 测试 5.1 minitest 5.1.1 model test 5.1.2 controller test 5.1.3 view test 5.1.4 integration test 5.2 rspec 5.2.1 model test 5.2.2 controller test 5.2.3 view test 5.2.4 integration test 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/6/Minitest.html":{"url":"前后端/Ruby On Rails 指南/6/Minitest.html","title":"Minitest","keywords":"","body":"5.1 minitest 5.1.1 model test 5.1.2 controller test 5.1.3 view test 5.1.4 integration test 1.9 Minitest 测试 1.9.1 @data2: Pxx-Pyy 1.9.2 @data3: Pxx-Pyy "},"前后端/Ruby On Rails 指南/6/Rspec.html":{"url":"前后端/Ruby On Rails 指南/6/Rspec.html","title":"Rspec","keywords":"","body":"5.2 rspec 5.2.1 model test 5.2.2 controller test 5.2.3 view test 5.2.4 integration test "},"前后端/Ruby On Rails 指南/7/7元编程.html":{"url":"前后端/Ruby On Rails 指南/7/7元编程.html","title":"7元编程","keywords":"","body":"第 7 章 元编程 本章简介： 读完本章，你将学到： "},"前后端/Ruby On Rails 指南/7/api.html":{"url":"前后端/Ruby On Rails 指南/7/api.html","title":"api","keywords":"","body":"6.1.1 send，send，public_send 区别？ 单件类：instance_eavl 或 class_eval 会把对象改为单件类 钩子方法：最常用的 included http://ucooling.github.io/blog/2015/05/20/ruby-zhong-de-gou-zi-fang-fa/ "},"前后端/bootstrap|html|css 指南/bootstrap|html|css 指南.html":{"url":"前后端/bootstrap|html|css 指南/bootstrap|html|css 指南.html","title":"《bootstrap|html|css 指南》","keywords":"","body":"《bootstrap|html|css 指南》 本书记录工作中常用的 bootstrap、html、css，包括三个部分： 常用模块 常用组件 常用功能 "},"前后端/bootstrap|html|css 指南/1/1常用模块.html":{"url":"前后端/bootstrap|html|css 指南/1/1常用模块.html","title":"1常用模块","keywords":"","body":""},"前后端/bootstrap|html|css 指南/1/footer.html":{"url":"前后端/bootstrap|html|css 指南/1/footer.html","title":"footer","keywords":"","body":"1.9 Footer 1.9.1 Footer 置底 "},"前后端/bootstrap|html|css 指南/1/navbar.html":{"url":"前后端/bootstrap|html|css 指南/1/navbar.html","title":"navbar","keywords":"","body":"1.2 Navbar 1.2.1 Navbar 汉堡置顶 1.2.2 Navbar 汉堡不置顶 "},"前后端/bootstrap|html|css 指南/1/全局.html":{"url":"前后端/bootstrap|html|css 指南/1/全局.html","title":"全局","keywords":"","body":"1.1 全局 1.1.1 html 布局 col-md-offset-1 方案 左右两侧会空白相比 container 要大，占 1/12 1.1.2 html 页面布局 container 方案 左右两侧会空白相比 col-md-offset-1 要小，各 15px 1.1.3 css 配色 参考网站配色：https://www.flaticon.com/ $bg-blue: #1D262D; $bg-green: #69E781; $font-blue: #1D262D; $font-blue-400: #5F7D95; $font-green: #69E781; $font-white: #fff; $when-font-selected: #7be589; $footer-font-white: #869FB2; $footer-font-white-600: #bac8d3; $a-hover: #1273eb; "},"前后端/bootstrap|html|css 指南/1/合作伙伴.html":{"url":"前后端/bootstrap|html|css 指南/1/合作伙伴.html","title":"合作伙伴","keywords":"","body":"1.7 合作伙伴 "},"前后端/bootstrap|html|css 指南/1/商品展示.html":{"url":"前后端/bootstrap|html|css 指南/1/商品展示.html","title":"商品展示","keywords":"","body":"1.5 商品展示 "},"前后端/bootstrap|html|css 指南/1/大图轮播.html":{"url":"前后端/bootstrap|html|css 指南/1/大图轮播.html","title":"大图轮播","keywords":"","body":"1.3 大图轮播 1.3.1 大图固定高度（适用于有按钮） 1.3.2 大图高度自适应（适用于没有按钮） "},"前后端/bootstrap|html|css 指南/1/服务优势.html":{"url":"前后端/bootstrap|html|css 指南/1/服务优势.html","title":"服务优势","keywords":"","body":"1.4 服务优势 "},"前后端/bootstrap|html|css 指南/1/用户反馈.html":{"url":"前后端/bootstrap|html|css 指南/1/用户反馈.html","title":"用户反馈","keywords":"","body":"1.6 用户反馈 "},"前后端/bootstrap|html|css 指南/1/立即购买.html":{"url":"前后端/bootstrap|html|css 指南/1/立即购买.html","title":"立即购买","keywords":"","body":"1.8 立即购买（图片中间放按钮） "},"前后端/bootstrap|html|css 指南/2/2常用组件.html":{"url":"前后端/bootstrap|html|css 指南/2/2常用组件.html","title":"2常用组件","keywords":"","body":"2.4 Bootstrap 组件 "},"前后端/bootstrap|html|css 指南/2/@media 媒体监听.html":{"url":"前后端/bootstrap|html|css 指南/2/@media 媒体监听.html","title":"@media 媒体监听","keywords":"","body":"2.4.3 @media 媒体监听 bootstrap 官网：https://v3.bootcss.com/css/ 1）常用屏幕尺寸 1200px/992px/768px/650px/550px/450px/300px min-width 填写『常用尺寸』因为刚好不换行，max-width 填写『常用尺寸-1px』2）用法 .course-img img, .title, .title-cover, .block, a .start{ @media (max-width: 750px) and (min-width: 500px) { width: 200px; background-color: #4cae4c; } @media (max-width: 950px) and (min-width: 750px) { width: 250px; background-color: yellow; } } 或 @media (max-width: 750px){ .course-img img { width: 250px; } } "},"前后端/bootstrap|html|css 指南/2/fontawesome doesn't work 显示为正方形.html":{"url":"前后端/bootstrap|html|css 指南/2/fontawesome doesn't work 显示为正方形.html","title":"fontawesome doesn't work 显示为正方形","keywords":"","body":"2.4.8 fontawesome doesn't work 显示为正方形：换用新版本 Gemfile # 弃用 gem 'font-awesome-rails', '~> 4.7' # 前端图标icon gem 'font-awesome-sass', '~> 5.8' application.html.rb "},"前后端/bootstrap|html|css 指南/2/margin 实现居中、右对齐、左对齐.html":{"url":"前后端/bootstrap|html|css 指南/2/margin 实现居中、右对齐、左对齐.html","title":"margin 实现居中、右对齐、左对齐","keywords":"","body":"2.4.9 margin 实现居中、右对齐、左对齐 /*居中*/ .col-center { margin: 0 auto; float: none; } /*右对齐*/ margin-left: auto; /*左对齐*/ margin-right: auto; "},"前后端/bootstrap|html|css 指南/2/ul 和 li 横向并排，圆点改成图标.html":{"url":"前后端/bootstrap|html|css 指南/2/ul 和 li 横向并排，圆点改成图标.html","title":"ul 和 li 横向并排，圆点改成图标","keywords":"","body":"2.4.2 ul 和 li 横向并排，圆点改成图标 bootstrap 方式 css 方式ul { list-style: none; //去除圆点 } li a:before { display:inline; //横向并排 content: \"\\f101\"; //圆点前加入图标 color: #fff; font-family: 'FontAwesome'; margin-right: 10px; } "},"前后端/bootstrap|html|css 指南/2/下分割线.html":{"url":"前后端/bootstrap|html|css 指南/2/下分割线.html","title":"下分割线","keywords":"","body":"2.4.6 下分割线 border-bottom: 1px solid #dedede; "},"前后端/bootstrap|html|css 指南/2/去除Bootstrap输入框聚焦时的边框轮廓线.html":{"url":"前后端/bootstrap|html|css 指南/2/去除Bootstrap输入框聚焦时的边框轮廓线.html","title":"去除Bootstrap输入框聚焦时的边框轮廓线","keywords":"","body":"2.4.4 去除Bootstrap输入框聚焦时的边框轮廓线 input:focus { outline: none; //去除Bootstrap输入框聚焦时的边框轮廓线 } "},"前后端/bootstrap|html|css 指南/2/大盒子影子边框效果.html":{"url":"前后端/bootstrap|html|css 指南/2/大盒子影子边框效果.html","title":"大盒子影子边框效果","keywords":"","body":"2.5 大盒子影子边框效果 box-shadow: 1px 2px 4px 0 rgba(0, 0, 0, 0.25); //盒子边缘浮起效果 display: table; //撑开盒子 @media(min-width: 600px){ width: 90%; //撑开宽度 } margin: 20px auto; //居中 background-color: rgba(255,255,255,0.94); "},"前后端/bootstrap|html|css 指南/2/字体 font-family.html":{"url":"前后端/bootstrap|html|css 指南/2/字体 font-family.html","title":"字体 font-family","keywords":"","body":"2.4.7 字体 font-family Open Sans，模板 avada-agency 使用 @import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800); font-family: 'Open Sans', sans-serif; 思源黑体 @import url('https://fonts.googleapis.com/earlyaccess/notosanssc.css'); font-family: 'Noto Sans SC', sans-serif; //google思源黑简 "},"前后端/bootstrap|html|css 指南/2/完全隐藏元素.html":{"url":"前后端/bootstrap|html|css 指南/2/完全隐藏元素.html","title":"完全隐藏元素","keywords":"","body":"2.4.5 完全隐藏元素（包括页面和盒子） display: none; //完全隐藏元素 "},"前后端/bootstrap|html|css 指南/2/截断文字，用...结尾.html":{"url":"前后端/bootstrap|html|css 指南/2/截断文字，用...结尾.html","title":"截断文字，用...结尾","keywords":"","body":"2.2 截断文字，用...结尾 scss 文件 .title{ h3 { width: 200px; white-space: nowrap; overflow: hidden; text-overflow:ellipsis; /*兼容IE*/ } } html 文件 使用CSS截断过长标题文字的方法 "},"前后端/bootstrap|html|css 指南/2/搜索框.html":{"url":"前后端/bootstrap|html|css 指南/2/搜索框.html","title":"搜索框","keywords":"","body":"2.4.1 搜索框： http://www.runoob.com/try/try.php?filename=bootstrap3-inputgroup-buttonaddons "},"前后端/bootstrap|html|css 指南/3/3常用功能.html":{"url":"前后端/bootstrap|html|css 指南/3/3常用功能.html","title":"3常用功能","keywords":"","body":"css 层叠的原理（hover 效果） html标签：aside、session、ol "},"前后端/bootstrap|html|css 指南/3/固定宽高的图片大小屏幕自适应-bootstrap方式（建议）.html":{"url":"前后端/bootstrap|html|css 指南/3/固定宽高的图片大小屏幕自适应-bootstrap方式（建议）.html","title":"固定宽高的图片大小屏幕自适应-bootstrap方式（建议）","keywords":"","body":"2.3.1 固定宽高的图片大小屏幕自适应-bootstrap方式（建议） col-md-xx + @media "},"前后端/bootstrap|html|css 指南/3/固定宽高的图片大小屏幕自适应-css方式.html":{"url":"前后端/bootstrap|html|css 指南/3/固定宽高的图片大小屏幕自适应-css方式.html","title":"固定宽高的图片大小屏幕自适应-css方式","keywords":"","body":"2.3.2 固定宽高的图片大小屏幕自适应-css方式 float + @media "},"前后端/bootstrap|html|css 指南/3/横向并排.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排.html","title":"横向并排","keywords":"","body":"横向并排： 虽然『栅格 col-md-4』和『ul.list-inline』也能实现并排，但是会多写了一些 html 代码，而且并排后仍然要靠 float 以及小屏幕时用 @media 和 float 来控制位置，所以基本弃用。 1、一行、元素两端对齐：用 display: -webkit-flex; 和 -webkit-justify-content: space-between; 2、一行、元素位置自定义：用 float:left、float:left、float:right，小屏幕元素换行时用 @media 控制 float 位置或 display:none 隐藏 3、多行、元素两端对齐：div.row>div.col-md-10.col-md-offset-1>div.col-md-4.col-sm-6.col-xs-12 栅格，并用 @media 控制 margin（1200px/992px/768px/650px/550px/450px/300px） 4、一行、左边 h1 右边图标 icon：要在 h1 上使用 display: inline; 5、一行、右边 h1 左边图标 icon：icon 使用 float: left; "},"前后端/bootstrap|html|css 指南/3/横向并排-一行元素两端对齐.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排-一行元素两端对齐.html","title":"横向并排-一行元素两端对齐","keywords":"","body":"2.4.5 横向并排：三个相同的 item 两端对齐 1）用 floathtml 文件 对本页内容的感受如何？ 😁 So Easy 😑 还 OK 😭 奔溃了 scss 文件 .feel { padding: 10px 5px 70px; border-bottom: 2px solid #dedede; //下划线 .select { padding: 30px 5px; .item1, .item2, .item3 { float: left; //并排 width: 33.33%; //宽度平分 .emoji { font-size: 2em; vertical-align: middle; } .word { font-size: 16px; vertical-align: middle; } } .bor1, .bor2, .bor3 { text-align: center; width: 120px; &:hover { border: 2px solid #31dae2; //线改为2px会有向下动的动作效果 } } .bor2 { margin: 0 auto; //margin实现：居中 } .bor3 { margin-left: auto; //margin实现：右对齐 } } } 2）推荐：用 display: -webkit-flex; 和 -webkit-justify-content: space-between; 让三个表情并排并两侧居中。html 文件 对本页内容的感受如何？ 😁 So Easy 😑 还 OK 😭 奔溃了 scss 文件 .aaa { padding: 10px 5px 20px; border-bottom: 2px solid #dedede; //下划线 .select { display: -webkit-flex; //并排 -webkit-justify-content: space-between; //两侧对齐 padding: 30px 5px; .item1, .item2, .item3 { .emoji { font-size: 2em; vertical-align: middle; } .word { font-size: 16px; vertical-align: middle; } } .bor1, .bor2, .bor3 { text-align: center; background-color: #1ab5bc; width: 120px; &:hover { border: 2px solid #31dae2; //线改为2px会有向下动的动作效果 } } } } "},"前后端/bootstrap|html|css 指南/3/横向并排-一行元素位置自定义.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排-一行元素位置自定义.html","title":"横向并排-一行元素位置自定义","keywords":"","body":"2.4 横向并排：看着简单却做不出来 2.4.1 三种横向并排对比 1）推荐：float:left; float:left; float:right;，在换行时设置 @media，换行宽度按实际值 注意：用 h1-h3 号字使用 float:left 时，可能会自动生成上下 padding，可以用 h4 或 p 代替 scss 文件 @media(max-width: 670px) { float: left; //让右侧的元素换行时左对齐 } html 文件 当前进度 总共8个作业，已完成8个。 60% 2）可用（因为既用了 float 还要配合 col-md-4 等 html 代码，所以不是首选）：div.row>div.col-md-6*2，在换行时设置 @media，换行宽度应该是标准值（768px/992px） scss 文件 @media(max-width: 991px) { float: left; //让右侧的元素换行时左对齐 } html 文件 当前进度 总共8个作业，已完成8个。 60% 3）不推荐，因为元素都在 li 层难以单独定位：ul.list-inline 2.4.2 简化版如下： 发动啊今啊 发动啊发啊 "},"前后端/bootstrap|html|css 指南/3/横向并排-一行右边h1左边图标icon.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排-一行右边h1左边图标icon.html","title":"横向并排-一行右边h1左边图标icon","keywords":"","body":"2.4.4 横向并排：h1右边，icon图标左边 因为 h1 字体换行时，即使只有一个字也会占满一行，所以用 『float 或 栅格』都不能实现并排，这时要在 h1 上使用 display: inline; 把块元素转为内联元素。scss 文件 .star { i { font-size: 25px; color: #31dae2; float: left; margin-top: 10px; } } html 文件 再学习6节就可以完成本章了再学习6节就可以完成本 "},"前后端/bootstrap|html|css 指南/3/横向并排-一行左边h1右边图标icon.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排-一行左边h1右边图标icon.html","title":"横向并排-一行左边h1右边图标icon","keywords":"","body":"2.4.3 横向并排：h1左边，icon图标右边 因为 h1 字体换行时，即使只有一个字也会占满一行，所以用 『float 或 栅格』都不能实现并排，这时要在 h1 上使用 display: inline; 把块元素转为内联元素。scss 文件 .title { margin: 50px auto 35px; //因为h1用了display: inline，无法改变margin，所以在这个位置改 h1 { display: inline; //让h1和icon图标并排（所以margin、padding属性会因此失效） } i { @media(min-width: 700px){ float: right; margin-top: 8px; } font-size: 25px; color: #31dae2; } } html 文件 再学习6节就可以完成本章再学习6节就dfas了 "},"前后端/bootstrap|html|css 指南/3/横向并排-多行元素两端对齐.html":{"url":"前后端/bootstrap|html|css 指南/3/横向并排-多行元素两端对齐.html","title":"横向并排-多行元素两端对齐","keywords":"","body":""},"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-css 方式（建议）.html":{"url":"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-css 方式（建议）.html","title":"鼠标悬停显示遮罩层-css 方式（建议）","keywords":"","body":"2.1.1 鼠标悬停显示遮罩层-css 方式（建议） scss 文件 /* 1.position（最外层盒子用 relative，内层盒子都用 absolute）、z-index、top 定位，让盒子重叠 2.width、height 定形，让大小重叠 3.opacity: 0/1 鼠标悬停前后，盒子隐藏或显示 */ .my_box { /*外层相对位置：为了让盒子位置重叠*/ position: relative; img { /*定位*/ position: absolute; z-index: 1; /*定形：撑开鼠标悬停前的盒子*/ width: 400px; height: 280px; } a { .mask { /*里层绝对位置：为了让盒子位置重叠*/ position: absolute; z-index: 2; top: 0; /*宽高：撑开鼠标悬停后的盒子*/ width: 400px; height: 280px; /*样式：鼠标悬停前*/ opacity: 0; background: rgba(101, 101, 101, 0.6); color: #fff; text-align: center; padding-top: 80px; } &:hover { .mask { /*样式：鼠标悬停后*/ opacity: 1; } } } } html 文件 A Picture of food 成功按钮 "},"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-jquery 方式.html":{"url":"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-jquery 方式.html","title":"鼠标悬停显示遮罩层-jquery 方式","keywords":"","body":"2.1.2 鼠标悬停显示遮罩层-jquery 方式 scss 文件 /* 1.position（最外层盒子用 relative，内层盒子都用 absolute）、z-index、top 定位，让盒子重叠 2.width、height 定形，让大小重叠 3.display: none 隐藏盒子，jquery 的 mouseover 鼠标悬停显示盒子，jquery 的 mouseout 鼠标离开隐藏盒子 */ .my_box { /*外层相对位置：为了让盒子位置重叠*/ position: relative; /*宽高：撑开鼠标悬停前的盒子*/ img { /*定位*/ position: absolute; z-index: 1; /*定形：撑开鼠标悬停前的盒子*/ width: 400px; height: 280px; } a { .mask { /*里层绝对位置：为了让盒子位置重叠*/ position: absolute; z-index: 2; top: 0; /*宽高：撑开鼠标悬停后的盒子*/ width: 400px; height: 280px; /*样式：鼠标悬停前*/ display: none; /*隐藏，属性解说：http://www.runoob.com/cssref/pr-class-display.html*/ background: rgba(101, 101, 101, 0.6); color: #fff; text-align: center; padding-top: 80px; } } } html 文件 A Picture of food 成功按钮 js 文件 $(function () { $(\".my_box\").mouseover(function () { $(\".mask\").show(); }); $(\".my_box\").mouseout(function () { $(\".mask\").hide(); }); }); "},"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-提高.html":{"url":"前后端/bootstrap|html|css 指南/3/鼠标悬停显示遮罩层-提高.html","title":"鼠标悬停显示遮罩层-提高","keywords":"","body":"2.1.3 鼠标悬停显示遮罩层-提高 sass 文件 .box99 { /*外层相对位置*/ position: relative; .course-img { /*定位*/ position: absolute; z-index: 1; img { /*定形*/ width: 220px; height: 160px; } } .title { /*定位*/ position: absolute; z-index: 3; /*定形*/ width: 220px; h3 { margin-top: 125px; font-size: 15px; color: #333; line-height: 40px; padding-left: 10px; letter-spacing: 1px; } } .title-cover { /*定位*/ position: absolute; z-index: 2; margin-top: 125px; /*定形*/ width: 220px; height: 35px; /*样式*/ background-color: rgba(225, 225, 225, 0.8); } .block { /*定位*/ position: absolute; z-index: 2; margin-top: 160px; /*定形*/ height: 70px; width: 220px; /*样式*/ padding: 6px 10px; border-top: 1px solid #DEDEDE; /*分割线*/ background-color: #f9f9fa; .time { font-size: 13px; } .bar { /*样式*/ overflow: hidden; background-color: #ccc; height: 4px; width: auto; margin: 13px 0 5px; border-radius: 4px; .percent { width: 40%; height: 4px; background-color: #1ECD97; } } .task { font-size: 13px; } } a { .start { /*定位*/ position: absolute; z-index: 5; top: 0; /*定形*/ width: 220px; height: 230px; /*样式*/ opacity: 0; /*隐藏*/ background: rgba(101, 101, 101, 0.6); color: #fff; text-align: center; padding-top: 80px; } &:hover { .start { opacity: 1;/*显示*/ } } } } html 文件 百宝箱 预计学习时间： 7小时 共1个作业，已完成0个 进入课程 "}}