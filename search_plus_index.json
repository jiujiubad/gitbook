{"./":{"url":"./","title":"关于本书","keywords":"","body":"Gitbook and my ebooks 第一部分介绍 Gitbook 的使用，以及用脚本部署到 Github-Pages；第二部分是用过的技术栈所要整理出来的多本 ebooks 电子书，包括前后端类、工具类、运维类、项目类。 Gitbook 教程 【精】2019-03-14 如何优雅地使用Gitbook：https://cloud.tencent.com/developer/article/1404934 【精】GitBook 使用教程：http://gitbook.zhangjikai.com/ 写 Markdown 时，标题不用写序号，因为 gitbook 插件 \"anchor-navigation-ex\" 会根据标题 h1-h3 字号自动加上 1/1.1/1.1.1 gitbook 插件 常用插件如下： \"splitter\"：左侧目录宽度可以鼠标拖动（中间位置的三个点）调整 \"copy-code-button\"：为代码块添加复制的按钮 \"-lunr\", \"-search\", \"search-plus\"：中文搜索, 需要将默认的 search 和 lunr 插件去掉 \"expandable-chapters-small\"：使左侧目录可以折叠 \"anchor-navigation-ex\"：添加Toc到侧边悬浮导航以及回到顶部按钮 \"simple-page-toc\"：自动生成本页的目录结构，使用时在页面添加 ` gitbook 用脚本部署到 github-pages 生成电子书（pdf/mobi/epub） 前后端 ebooks 工具 ebooks 运维 ebooks 项目 ebooks ` \"pluginsConfig\": { \"simple-page-toc\": { \"maxDepth\": 3, \"skipFirstH1\": true } } \"github-buttons\"：添加项目在 github 上的 star，watch，fork情况 touch book.json 新建文件并填写 { \"title\": \"Gitbook Use\", \"author\": \"chu\", \"language\": \"zh-hans\", \"links\": { \"sidebar\": { \"Home\": \"https://xiaochu.cf\" } }, \"plugins\": [ \"splitter\", \"copy-code-button\", \"-lunr\", \"-search\", \"search-plus\", \"expandable-chapters-small\", \"anchor-navigation-ex\", \"github-buttons\" ], \"pluginsConfig\": { \"github-buttons\": { \"buttons\": [{ \"user\": \"jiujiubad\", \"repo\": \"gitbook\", \"type\": [\"star\"], \"size\": \"small\", \"count\": true } ] } } } gitbook 用脚本部署到 github-pages gitbook 常用命令 npm install gitbook-cli -g #安装gitbook管理工具 gitbook --version #查看gitbook版本 gitbook install #安装插件 gitbook build #生成html页面 gitbook serve #生成html页面并开启服务，监听4000端口 创建 gh-pages 分支，并在 github 的 Setting-Github Pages 选项中添加该分支 git checkout -b gh-pages touch deploy.sh 新建脚本并填写 #!/bin/bash # 设置远程仓库的地址 remote_url=git@github.com:jiujiubad/gitbook-test.git # 获取当前时间 cur_date=\"`date +%Y-%m-%d-%H:%M:%S`\" # 生成_book文件 gitbook build rm -rf .deploy_git/* | egrep .deploy_git/.git if [ ! -d \".deploy_git/\" ];then cp -R _book/ .deploy_git/ else cp -R _book/* .deploy_git/ fi cd .deploy_git/ git init git remote add origin $remote_url git checkout -b gh-pages git add -A git commit -m $cur_date git push -f origin gh-pages touch .gitignore 新建并填写 git 忽略文件 # 生成的静态 html 文件 _book # 部署脚本生成的文件 .deploy_git 给脚本授权，并执行脚本。以后每次修改电子书，执行 git push origin master 后只要执行 ./deploy.sh 就能自动部署到 gh-pages 分支。 chmod a+x ./deploy.sh ./deploy.sh 部署完成！！打开页面 https://github名称.github.io/仓库名称 查看电子书 生成电子书（pdf/mobi/epub） 下载安装 Calibre（自带有 ebook-convert 插件）：https://calibre-ebook.com/download sudo ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin #创建ebook-convert链接 gitbook pdf . #在当前目录生成pdf gitbook mobi . #在当前目录生成mobi gitbook epub . #在当前目录生成epub 在线压缩 pdf：https://www.pdf2go.com/compress-pdf 前后端 ebooks 《ROR指南》 《Yaml指南》 《bootstrap+html+css指南》 《微信小程序指南》 《Jquery|JavaScript|Ajax指南》 《TypeScript指南》 《Vue指南》 《Flutter指南》 工具 ebooks 《终端Shell指南》：oh-my-zsh，vim 《自搭建指南》：博客，科学上网，私有云盘，下载上传，云播放，ftp服务器 《Markdown指南》 《Sys-Mac指南》 《Sys-Windows指南》 《Sys-Linux指南》 《虚拟机指南》 《电商Solidus指南》 《设计与剪辑指南》 运维 ebooks 《Git指南》 《环境-Linux|Ansible指南》 《任务-Sidekiq|Sidetiq|Crontab指南》 《集群-Docker|Kubernetes|Vagrant指南》 《代理-Nginx|Apache指南》 《安全-通讯协议|Oauth指南》 《数据-Mysql|Postgresql|Redis指南》 《自动化测试-Selenium|Appium指南》 项目 ebooks 《初的文档》 《PJ项目》 《项目方法论》敏捷过程、Growth Hack、User Story、项目管理 "},"ror指南/ROR指南.html":{"url":"ror指南/ROR指南.html","title":"ROR指南","keywords":"","body":"本书《ROR指南》 以下所以章节，记录有关本书的内容 "},"ror指南/1-功能资料.html":{"url":"ror指南/1-功能资料.html","title":"功能资料","keywords":"","body":"《ROR 指南》第 1 章 ror 功能资料 ror 资料 title 注册登录（用户权限管理） 1.4.1 1.4.2 bootstrap 模板使用 表单 1.6.1 1.6.2 1.7 数据库查询 1.8 heroku常用命令 1.9 Minitest 测试 1.9.1 1.9.2 1.10 定义 current_user、current_cart、current_xxx 百宝箱： 2.1 投票系统 2.1.1 需求 2.2 讨论区 2.2.1 需求 2.3 电影影评网 2.3.1 需求 2.4 招聘网 2.4.1 需求 2.5 购物网 2.5.1 需求 2.6 天气预报（Api） 2.6.1 需求 2.7 列车订票系统（Api） 2.7.1 需求 2.8 分享贴文和点赞网（Ajax） 2.8.1 需求 2.9 闰年程序(Rspec 测试) 2.9.1 需求 2.10 停车计费程序（Rspec 测试） 2.10.1 需求 2.11 活动报名系统（百宝箱） 2.11.1 需求 2.6 Erp 2.7 码云机考题 2.1 微博（一个模型内两者多对多） 2.12 训练营 2.12.1 项目模块 ror 资料 @data1 = rails guides @data2 = 《rails5 敏捷开发》第五版 @data3 = 《rails tutorial》第五版 @data4 = 《ruby 基础教程》 @data5 = 《ruby 元编程》 @data6 = ruby on rails 实战圣经 @data7 = 全栈营 @data8 = 论坛 title @data3：P104-105 # 根据所在的页面返回完整的标题 def full_title(page_title = '') base_title = \"Ruby on Rails Tutorial Sample App\" if page_title.empty? base_title else page_title + \" | \" + base_title end end 注册登录（用户权限管理） 1.4.1 gem devise: https://github.com/plataformatec/devise 1.4.2 @data3: P283 P293不完善 P295两个问题token：记忆令牌 即 密码 digest：密码摘要/哈希 即 hash 登录时： 记忆令牌 即 密码、加密的用户id，保存在浏览器 密码摘要/哈希 即 hash，保存到数据库 退出时修改： 记忆令牌即密码，保存在浏览器 bootstrap 模板使用 @data1: http://xxxx 表单 1.6.1 @data6: http://xxxx 1.6.2 @data7 百宝箱: https://xxxx 1.7 数据库查询 @data1: https://ruby-china.github.io/rails-guides/active_record_querying.html 天马 erp：https://github.com/jiujiubad/xc-amz-erp 1.8 heroku常用命令 @data3: Pxx-Pyy 1.9 Minitest 测试 1.9.1 @data2: Pxx-Pyy 1.9.2 @data3: Pxx-Pyy 1.10 定义 current_user、current_cart、current_xxx 修改 xxx_helper.rb def current_camp @current_camp ||= find_camp end def find_camp if (camp_id = params[:camp_id]) session[:camp_id] = camp_id Camp.find_by(id: camp_id) elsif camp_id.blank? && session[:camp_id] Camp.find_by(id: session[:camp_id]) else Camp.first end end 修改 app/controllers/application_controller.rb include XxxHelper 百宝箱： 自定义Model网址 多语言设置 时区设置 格式化日期时间 表单单选 UI (固定选项无 Model) 表单单选 UI 和 Select2 Plugin 表单多选 UI 和 Select2 Plugin 嵌套表单(1-to-1) 嵌套表单(1-to-many) 选日期时间的 UI 拆开前后台的 CSS 和 JS Rich Editor 编辑器 批次编辑 (Bulk Editing) 自订列表顺序 多步骤表单 显示资料验证错误讯息 资料筛选和搜寻 多档案上传 图表资料分析 软删除和版本控制 数据汇出 用户权限管理 HTML E-mail 寄送 数据汇入 异步处理任务 2.1 投票系统 @data7 初级练习: https://xiaochu.ga/Content/syllabus_f11jH0.html 一对多：3-8 2.1.1 需求 检视主题，用投票数来排序 对主题投票 开新主题、编辑主题、删除主题 加一个“扣分”按钮，做的事跟加分按钮相反 根据投票分数排序 topics 新增一个 'about' 页面，并将连结放在 topics 列表的最下方 2.2 讨论区 @data7 Rails101: https://xiaochu.ga/Content/syllabus_TCv0K3.html 一对多：6-2 多对多：7-2 2.2.1 需求 使用者注册以及登录功能 开新讨论区、留言功能 加入讨论区、退出讨论区功能 权限管理功能 热门文章排序功能 了解什么是 RESTful 2.3 电影影评网 @data7 Rails101 加分作业: https://xiaochu.ga/Content/syllabus_TCv0K3.html 2.3.1 需求 使用者可以建立电影 Movie 使用者可以针对电影的评论 Review 使用者必须收藏（ Favorite） 该电影，才可以留下 Review 2.4 招聘网 @data7 招聘网: https://xiaochu.ga/Content/syllabus_0SvP9N.html 2.4.1 需求 身为管理者，我可以新增职缺需求：包括「标题」「内容」「薪资上限」「薪资下限」「联系方式」 身为管理者，我可以编辑、删除、隐藏职缺需求 （在后台）； 身为使用者，我必须「登入」才能申请职缺； 身为使用者，我必须要有「admin 身份标识」才能进入后台。 加上 sidebar 设计：区分 admin#job 与 job 页面 admin 后台的职缺状态，改成 Font Awesome 图标显示 把 is_hidden 的操作改成按钮 jobs#show 在隐藏状态不可以用 管理员在后台可以看到每个职缺有多少使用者投递简历； 管理员在后台可以看到每个职缺里面的投递简历内容，并且可以下载附件。 2.5 购物网 @data7 购物网: https://xiaochu.ga/Content/syllabus_3yMKyR.html 一对多：5-3、8-1、8-2 2.5.1 需求 1、身为商家，我要能够登入后台 整个商店网站分为两种权限：admin (商家=管理者) / user （消费者） 商家可以登入 /admin 后台 2、身为商家，我要能够登入后台上架商品 后台上架网址必须要是 /admin/products 商品的内容分为商品名称、描述、价格、库存 商品要能够设定是否能上架贩卖 商品必须要有商品图片 3、身为消费者，我要在前台找到商品并付款 商品展示 加入购物车 生成订单，填写地址并付款 付款后发送确认信 商家也收到付款的订单 库存商品数量随之减少 3.1）购物车 加入购物车 一键清空购物车内所有的物品 某样东西突然不想买了，我可以在购物车内删除它 已经加入购物车的物品，不能重复被加入 可以更改购物车内购买的数量( 原本预设数量都是1） 库存为 0 的货品不能购买 在购物车新增数量时，不能更新超过原有库存的数量 3.2）订单 按下「确认结帐」按钮后，可以显示结帐明细，并且可以让消费者输入寄送地址 有时候商品会下架，或者价格会改变，新建立一个 model 去储存当时购买的信息 把网址订单号码改成乱序编码 使用者可以在 /account/orders/ 看到过去所有订单 使用者在下拉式选单可以看到过去所有的订单 3.3）支付订单与寄信 使用 is_paid（boolean 属性）判断是否已付费 使用 payment_method 判断，实际付款渠道为：微信、支付宝 已付款过的订单不可以再付 使用者在下单后会收到一封订单确认信 3.4）订单状态切换 建立 admin/orders 可以看到系统内所有订单 admin 的 order 列表应要能显示订单状态 使用者可以“申请取消订单” 使用者“申请取消订单”后，管理员应该要收到“申请通知信” 后台管理员可以“取消订单”、“出货” 后台管理“出货”后，系统应该寄出通知信 后台管理员“取消订单”后，系统应该寄出通知信 2.6 天气预报（Api） @data7 Web API 实作 1-1 to 2-6：https://xiaochu.ga/Content/syllabus_dsrUtj.html 2.6.1 需求 串接 聚合数据 全国天气预报 的 API，存下所有城市资料，并更新指定城市的天气信息。 建立一个 City model，然后把 API 抓取回来的城市资料存进数据库 新增 cities controller 和页面，让用户可以浏览城市资料 用户可以更新指定城市的气温资讯 2.7 列车订票系统（Api） @data7 Web API 实作 3-1 to 7-7: https://xiaochu.ga/Content/syllabus_dsrUtj.html @data7 Rails 自动化测试 5-1 to 5-9: https://xiaochu.ga/Content/syllabus_wzHTVX.html 2.7.1 需求 可以查询有哪些列车 可以查询特定列车有哪些空位 可以订票，并得到一组订票号码(乱数产生) 根据订票号码，可以查询订票资料 根据订票号码，可以修改订票资料 根据订票号码，可以取消订票 使用者可以在网页上注册、登入，拿到 API Key 如果在有登入的情况下进行订票的话，则可以查询该用户下的所有订票 注册、登入和登出的 API，好让用户输入帐号密码登入，拿到 API Key 更新自己的资料，包括修改 E-mail、密码和上传照片 查询自己的资料 GET 拿资料可能会很复杂，因为资料字段很多，使用 JBuilder 来定义 JSON 测试注册 API: 测试登入登出 API 测试查询列车 API 测试查询订票、修改定票、取消订票 API 测试订票 API 测试查询我全部的订单 API 测试查询和更新我的资料 API 2.8 分享贴文和点赞网（Ajax） @data7 Ajax 交互式网页应用: https://xiaochu.ga/Content/syllabus_Kjk6xh.html 2.8.1 需求 用户可以贴文 用户可以浏览所有贴文 用户可以删除自己的贴文 用户可以针对贴文按讚，每篇贴文只能按讚一次 将删除改成自行绑事件 贴文无限捲轴 使用核选方块(checkbox)做开关 使用下拉选单(select)分类贴文 2.9 闰年程序(Rspec 测试) @data7 Rails 自动化测试 1-1 to 1-5: https://xiaochu.ga/Content/syllabus_wzHTVX.html 2.9.1 需求 写一个方法判断闰年： 西元年分除以400可整除，为闰年 西元年分除以4可整除但除以100不可整除，为闰年 西元年分除以4不可整除，为平年 西元年分除以100可整除但除以400不可整除，为平年 2.10 停车计费程序（Rspec 测试） @data7 Rails 自动化测试 2-1 to 4-8: https://xiaochu.ga/Content/syllabus_wzHTVX.html 2.10.1 需求 未注册登入用户，可以点选开始计费和结束，并使用「一般费率」： 第一个小时 ¥2，之后每半小时 ¥1 有注册的登入用户，可以选择「短期费率」 或「长期费率」 有注册的登入用户，短期费率：第一个小时 ¥2，之后每半小时 ¥0.5 有注册的登入用户，长期费率：一天 ¥16，若停六小时以内 ¥12 用户验收测试: 测试「一般费率」缴费流程 测试注册流程 测试登入登出流程 测试「短期费率」流程 故意修改 Model API 2.11 活动报名系统（百宝箱） 2.11.1 需求 用户可以在前台看到活动信息 管理员可以在后台管理活动资料 管理员可以在后台管理用户资料 用户可以在前台进行报名 管理员可以在后台管理报名资料 2.6 Erp 2.7 码云机考题 2.1 微博（一个模型内两者多对多） 2.12 训练营 参考 《天马》、《rails 实战圣经》搭建公司、部门、个人框架 参考《云豹》字段，以及 Redis + Selenium 参考《rails5 敏捷开发》《rails tutorial》添加测试 参考《rails guides》和《天马》数据库查询 表单让用户提交数据，sidekiq 异步执行，actioncable 2.12.1 项目模块 1）基础页面 首页 home 课程介绍，/pages/course_intro 常见问题，/pages/faq 教学团队，/pages/teachers 学员心得，/pages/students 联系方式，/pages/contact 聊天插件 帮助文档，https://readme.io 2）注册登录 devise 手机登录 微信登录 3）dashboard 学习中心 聚会，/meetup_groups，增删改 直播，home/live，有很多个往期视频，有预告信息或直播，管理员可以增删改 通知，home/notice 网站公告 比赛，/competitions，index 显示举办的比赛 比赛 competitions#show 作品缩略图打开是弹窗的作品详情，对应内容来源于 /works/id 比赛获奖，/competitions/4/awards，index 显示所有获奖作品 比赛作品详情，/works/id，在比赛获奖页面链接过来（其余页面用弹窗的方式显示详情） 比赛作品详情，图片、评论、浏览恢复点赞数，倒计时 4）courses 课程 all, basic, major, optional 标签 教学大纲，/courses/36/syllabus 正文，/posts/id，显示为 markdown 格式 正文，收藏，感受，分页 某课程的作业，/tasks/id 某课程的作业-别人的，/tasks/id/other_answers?order=recent，点赞 搜索教材 课程感受三个选择（站内信） 5）user 个人主页 我的作业（图片或文字），图片来于 /api/file 作业进度 比赛作品 会员有很多的课程 课程按会员等级不同显示不同 会员升级后，原来的作业、作品等还保持原来的进度 13510001800 坂田街道吉华路603号国惠康一楼 "},"ror指南/1百宝箱.html":{"url":"ror指南/1百宝箱.html","title":"百宝箱","keywords":"","body":"百宝箱 介绍常用的 Rails 模块，或功能 "},"ror指南/a1.html":{"url":"ror指南/a1.html","title":"a1","keywords":"","body":"a1 这里记录的是 a1 的内容 "},"ror指南/a2.html":{"url":"ror指南/a2.html","title":"a2","keywords":"","body":"a2 这里记录的是 a2 的内容 "},"ror指南/a3.html":{"url":"ror指南/a3.html","title":"a3","keywords":"","body":"a3 这里记录的是 a3 的内容 "},"ror指南/a4.html":{"url":"ror指南/a4.html","title":"a4","keywords":"","body":"a4 这里记录的是 a4 的内容 "}}